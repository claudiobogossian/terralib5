  TerraLib Build Instructions
  ===========================


The build/cmake folder contains a CMake project for building TerraLib.

Until now its build has been tested on Linux Ubuntu 12.04, Mac OS X Mavericks and Microsoft Windows 7.

Future releases will be tested on Mac OS X Snow Leopard, Microsoft Windows 8 and others Linux flavours.

You should use at least CMake version 2.8.7 for building TerraLib. Older versions than this may not work properly.

Make sure you have all the third-party library dependencies listed in the DEPENDENCIES file on the root of the codebase.

Follow the build steps below according to your platform.


1. Build instructions on Linux with g++ (GNU gcc)
-------------------------------------------------

1.1. Open a Command Prompt (Shell).

1.2. We will assume that the codebase (all the source tree) is located at:
/home/user/terralib/codebase

1.3. Create a folder out of the terralib source tree, for example:
$ cd /home/user/terralib
$ mkdir build-linux
$ cd build-linux

1.4. For Linux systems you must choose the build configuration:
$ cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE:STRING="Release" -DCMAKE_INSTALL_PREFIX:PATH="/usr/local/terralib" ../codebase/build/cmake

Notes:

       a) Some Linux flavours with diffrent versions of GNU gcc and Boost will need more parameters such as:
          -DCMAKE_PREFIX_PATH:PATH="/usr/local;/opt/include"
          -DCMAKE_INCLUDE_PATH:PATH="/usr/local;/opt/include"
          -DCMAKE_LIBRARY_PATH:PATH="/usr/local;/opt/lib"
          -DCMAKE_PROGRAM_PATH:PATH="/usr/local/bin;/opt/bin"
          -DBOOST_ROOT:PATH="/opt/boost"

       b) Boost can also be indicated by BOOST_INCLUDEDIR (note: without an '_' separating INCLUDE and DIR):
          -DBOOST_INCLUDEDIR:PATH="/usr/local/include"

       c) The parameter -lpthread must be informed only if your Boost was not built as a shared library:
          -DCMAKE_CXX_FLAGS:STRING="-lpthread"

       d) For building with Qt5 you can provide the Qt5_DIR variable as:
          -DQt5_DIR:PATH="/usr/local/lib/cmake/Qt5"

       e) For generating a debug version set CMAKE_BUILD_TYPE as:
          -DCMAKE_BUILD_TYPE:STRING="Debug"

1.5 Building:
$ make -j 4

1.6 Installing:
$ make install


2. Building with CMake GUI
--------------------------

2.1 On Windows:

a) We will assume that the terralib5 source tree (git clone) is located at:
	C:/TL5/terralib5
	
b) We will assume that the third party libraries, obtained from
     http://www.dpi.inpe.br/terralib5-devel/terralib5-3rdparty-win32-Qt5.zip are located at:
	 C:/terralib5-3rdparty-win32-Qt5
	 
c) Create a folder out of the terralib5 source tree to build the binaries, for example:
	C:/TL5_build

d) Open CMake-GUI in order to generate a build project for Microsoft Visual C++ 2010 (32-bit or 64-bit).
   Then assure that the following variables are set to the locations defined above:
     Where is the source code => C:/TL5/terralib5/build/cmake
	 Where to build the binaries => C:/TL5_build

   Then add a entry called CMAKE_PREFIX_PATH with the informations (separated by semicolons):
	- Microsoft SDK;
	- TerraLib 5 Third party path;
	- Qt CMake.

	Example: Press AddEntry button and inform the name CMAKE_PREFIX_PATH, type PATH and set its value as:
    CMAKE_PREFIX_PATH => C:/Program Files (x86)/Microsoft SDKs/Windows/v7.0A;C:/terralib5-3rdparty-win32-Qt5;C:/Qt/Qt5.3.0/5.3/msvc2010_opengl/lib/cmake/Qt5"
   
   Then press "Configure" and if not problem occurs press "Generate".
 
   If some problem occurs check the following TERRALIB variables an set its values to ON or OFF:
     TERRALIB_TRACK_3RDPARTY_DEPENDENCIES => ON
     TERRALIB_QHELP_ENABLED => ON
     TERRALIB_DOXYGEN_ENABLED => ON  (if you want to distribute the API documentation)

   Some project may be disabled through the following variables:
     TERRALIB_BUILD_EXAMPLES_ENABLED => OFF
     TERRALIB_BUILD_UNITTEST_ENABLED => OFF

e) Open the generated terralib.sln solution at the folder C:\TL5_build.
   Then build the "ALL_BUILD" project to build all terralib projects, including terraview application.
   
f) To run and debug terraview application, set it as StartUp Project at Microsoft Visual C++ 2010.


For more information on TerraLib, please, visit its main web page at:
	  http://www.terralib.org


  May 2015, TerraLib Team <terralib-team@dpi.inpe.br>
